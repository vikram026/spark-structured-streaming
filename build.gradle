import com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'

	id 'com.commercehub.gradle.plugin.avro' version '0.9.1'

}

group = 'com.nisum'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url "http://packages.confluent.io/maven/" }



	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	compile group: 'org.codehaus.janino', name: 'janino', version: '3.0.8'
	//compile group: 'org.codehaus.janino', name: 'commons-compiler', version: '3.1.2'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	implementation('org.apache.spark:spark-sql_2.11:2.4.5') {
		exclude group:'org.slf4j', module: 'slf4j-log4j12'
	}
	compile group: 'org.apache.kafka', name: 'kafka-clients', version: '5.4.1-ccs'
	testCompile group: 'com.holdenkarau', name: 'spark-testing-base_2.11', version: '2.4.5_0.14.0'
	implementation 'org.apache.spark:spark-sql-kafka-0-10_2.11:2.4.5'
	implementation 'org.apache.spark:spark-avro_2.11:2.4.5'
	implementation 'org.mongodb.spark:mongo-spark-connector_2.11:2.4.1'
	//compile group: 'io.projectreactor.kafka', name: 'reactor-kafka', version: '1.2.0.RELEASE'
	implementation 'io.confluent:kafka-avro-serializer:5.4.0'
}
avro {
	createSetters = false
	fieldVisibility = "PRIVATE"
	stringType = "String"
	outputCharacterEncoding = "UTF-8"
}
task generateAvro(type: GenerateAvroJavaTask) {
	source("src/main/resources/avro/")
	outputDir = file("build/generated/java/main")
}
sourceSets {
	main {
		java.srcDirs += generateAvro.outputs
	}
}




test {
	useJUnitPlatform()
}
